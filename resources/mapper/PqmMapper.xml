<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.byd.emg.mapper.PqmMapper" >

    <resultMap id="TransformerMap" type="com.byd.emg.pojo.PqmTransformer">
        <id column="menu_id" property="menuId" />
        <result column="id" property="id" />
        <result column="label" property="label" />
        <result column="capacity"  property="capacity" />
        <result column="value"  property="value" />
        <result column="order_id"  property="orderId" />
        <result column="parent_id"  property="parentId" />
    </resultMap>
    <insert id="batchInsert">
        INSERT INTO ${table}(time,menu_id,fhl,fzl,yggl,wggl,szgl,zdyggl,zxyggl,glys)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            ('${item.time}',${item.menuId},${item.fhl},${item.fzl},${item.yggl},${item.wggl},${item.szgl},${item.zdyggl},${item.zxyggl},${item.glys})
        </foreach>

    </insert>
    <insert id="batchInsertXl">
        INSERT INTO pqm_demand_quarter (tagname,time,max_p,min_p,max_q,min_q)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            ('${item.tagname}','${item.time}',${item.maxP},${item.minP},${item.minQ},${item.minQ})
        </foreach>
    </insert>
    <insert id="statistics">

         INSERT INTO ${table} (tagname,time,max_p,min_p,max_q,min_q)
	 select  tagname,'${start}',max(max_p) max_p,min(min_p) min_p,max(max_q) max_q,min(min_q) min_q
	 from ${baseTable}
	 where time BETWEEN '${start}' and '${end}' group by tagname


    </insert>
    <insert id="statisticsAvg">
   INSERT INTO ${table} (tagname,time,
        Ia_avg,Ia_max,Ia_min,Ia_num,Ia_sum,
        Ib_avg,Ib_max,Ib_min,Ib_num,Ib_sum,
        Ic_avg,Ic_max,Ic_min,Ic_num,Ic_sum,
        Ua_avg,Ua_max,Ua_min,Ua_num,Ua_sum,
        Ub_avg,Ub_max,Ub_min,Ub_num,Ub_sum,
        Uc_avg,Uc_max,Uc_min,Uc_num,Uc_sum,
        PF_avg,PF_max,PF_min,PF_num,PF_sum)
	 select tagname ,'${start}',
	  case sum(Ia_num) WHEN 0 then 0 else sum(Ia_sum)/sum(Ia_num) end,max(Ia_max),min(Ia_min),sum(Ia_num),sum(Ia_sum)  ,
	  case sum(Ib_num) WHEN 0 then 0 else sum(Ib_sum)/sum(Ib_num) end,max(Ib_max),min(Ib_min),sum(Ib_num),sum(Ib_sum) ,
      case sum(Ic_num) WHEN 0 then 0 else sum(Ic_sum)/sum(Ic_num) end,max(Ic_max),min(Ic_min),sum(Ic_num),sum(Ic_sum)  ,
      case sum(Ua_num) WHEN 0 then 0 else sum(Ua_sum)/sum(Ua_num) end,max(Ua_max),min(Ua_min),sum(Ua_num),sum(Ua_sum) ,
      case sum(Ub_num) WHEN 0 then 0 else sum(Ub_sum)/sum(Ub_num) end,max(Ub_max),min(Ub_min),sum(Ub_num),sum(Ub_sum)  ,
      case sum(Uc_num) WHEN 0 then 0 else sum(Uc_sum)/sum(Uc_num) end,max(Uc_max),min(Uc_min),sum(Uc_num),sum(Uc_sum) ,
      case sum(PF_num) WHEN 0 then 0 else sum(PF_sum)/sum(PF_num) end,max(PF_max),min(PF_min),sum(PF_num),sum(PF_sum)
	 from ${baseTable}
	 where time BETWEEN '${start}' and '${end}' group by tagname
    </insert>


    <insert id="batchInsertStatistics">
        INSERT INTO pqm_statistics_quarter (tagname,time,
        Ia_avg,Ia_max,Ia_min,Ia_num,Ia_sum,
        Ib_avg,Ib_max,Ib_min,Ib_num,Ib_sum,
        Ic_avg,Ic_max,Ic_min,Ic_num,Ic_sum,
        Ua_avg,Ua_max,Ua_min,Ua_num,Ua_sum,
        Ub_avg,Ub_max,Ub_min,Ub_num,Ub_sum,
        Uc_avg,Uc_max,Uc_min,Uc_num,Uc_sum,
        PF_avg,PF_max,PF_min,PF_num,PF_sum)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            ('${item.tagname}','${item.time}',
            ${item.Ia_avg},${item.Ia_max},${item.Ia_min},${item.Ia_num},${item.Ia_sum},
            ${item.Ib_avg},${item.Ib_max},${item.Ib_min},${item.Ib_num},${item.Ib_sum},
            ${item.Ic_avg},${item.Ic_max},${item.Ic_min},${item.Ic_num},${item.Ic_sum},
            ${item.Ua_avg},${item.Ua_max},${item.Ua_min},${item.Ua_num},${item.Ua_sum},
            ${item.Ub_avg},${item.Ub_max},${item.Ub_min},${item.Ub_num},${item.Ub_sum},
            ${item.Uc_avg},${item.Uc_max},${item.Uc_min},${item.Uc_num},${item.Uc_sum},
            ${item.PF_avg},${item.PF_max},${item.PF_min},${item.PF_num},${item.PF_sum})
        </foreach>
    </insert>

    <delete id="batchDeleteXl">

        delete ${table} where
        tagname in
        <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
            '${id}'
        </foreach>
        and time = '${time}'

    </delete>

    <delete id="batchDeleteStatistics">
        delete ${table} where
        tagname in
        <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
            '${id}'
        </foreach>
        and time = '${time}'

    </delete>

    <delete id="batchDelete">
        delete ${table} where
        menu_id in
        <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
            ${id}
        </foreach>
        and time = '${time}'

    </delete>


    <select id="list"  resultType="map">
       select tagname, left(his_date+' '+his_time,16)+':00' time ,time_value  from equip_1min_power where
       tagname  in
        <foreach collection="tagnames" item="id" index="index" open="(" close=")" separator=",">
            '${id}'
        </foreach>
	and convert(datetime,his_date+' '+his_time, 20) BETWEEN '${startTime}'  and '${endTime}'
    </select>
    <select id="getTransformer" resultMap="TransformerMap">
        select * from pqm_transformer order by order_id
    </select>
    <select id="getAsync" resultMap="TransformerMap">
      select * from pqm_transformer where len([value])>0 and len([capacity])>0   order by order_id

    </select>
    <select id="listValue" resultType="java.util.Map">
        select tagname,avg(time_value) avg_value,max(time_value) max_value,min(time_value) min_value
        from equip_1min_power where
        <if test="type == 'day'">
            left(his_Date,10) = '${hisDate}'
        </if>

        <if test="type == 'month'">
            left(his_Date,7) = '${hisDate}'
        </if>
         and
        tagname in
        <foreach collection="tagnames" item="id" index="index" open="(" close=")" separator=",">
            '${id}'
        </foreach>
        GROUP BY tagname
    </select>
    <select id="listLoad" resultType="java.util.Map">
        select a.menu_id,CONVERT(varchar(100),time, 120) time,fhl,fzl,yggl,wggl,szgl,zdyggl,zxyggl
         from  ${table} a
        where  a.menu_id in
        <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
            ${id}
        </foreach>
        and
        time BETWEEN '${startTime}' and '${endTime}'
    </select>
    <select id="listXl" resultType="java.util.Map">
    select tagname,min(time_value) min_value,max(time_value) max_value from equip_1min_power where tagname in
        <foreach collection="tagnames" item="id" index="index" open="(" close=")" separator=",">
            '${id}'
        </foreach>
    and  convert(datetime,his_date+' '+his_time, 20) BETWEEN
        '${start}' and '${end}'
    group by tagname
    </select>

    <select id="listStatistics" resultType="java.util.Map">
        select tagname,avg(case time_value WHEN 0 then null else time_value end) avg_value,
        min(case time_value WHEN 0 then null else time_value end) min_value,
        max(case time_value WHEN 0 then null else time_value end) max_value,
        sum(time_value) sum_value,
        count(case time_value WHEN 0 then null else time_value end) count_value from equip_1min_power where tagname in
        <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
            '${id}'
        </foreach>
        and  convert(datetime,his_date+' '+his_time, 20) BETWEEN
        '${start}' and '${end}'  and convert(datetime,his_date+' '+his_time, 20) != '${end}'
        group by tagname
    </select>




    <select id="menuList" resultType="com.byd.emg.pojo.MenuTable">
        select * from menu_table_power where len(value) > 0 and type ='${type}'

    </select>
    <select id="getNav" resultType="com.byd.emg.pojo.MenuTable">
        select   id,primary_key,value,label,data_alarm,device_alarm,parent_id,type
        from menu_table_power
         where   type = '${type}'
        ORDER BY primary_key

    </select>

    <select id="menuListByIds" resultType="com.byd.emg.pojo.MenuTable">
        select   id,primary_key,value,label,data_alarm,device_alarm,parent_id,type
        from menu_table_power
         where   type = '${type}' and value  = '${tagname}'
        ORDER BY primary_key

    </select>

    <select id="listXlRecord" resultType="java.util.Map">
    select CONVERT(varchar(100),time, 120) time,tagname,max_p,min_p,max_q,min_q
    FROM ${table} a
    where  a.tagname in
        <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
            '${id}'
        </foreach>
    and time BETWEEN '${startTime}' and '${endTime}'

    </select>
    <select id="select" resultType="java.util.Map">

           select distinct tagname,
        max_p, max(case maxPNum when 1 then time else '' end) over(partition by tagname) max_p_time,
        min_p,max(case minPNum when 1 then time else '' end) over(partition by tagname) min_p_timeÂ ,
        avg_p,
        max_q, max(case maxQNum when 1 then time else '' end) over(partition by tagname) max_q_time,
        min_q,max(case minQNum when 1 then time else '' end) over(partition by tagname) min_q_time,
        avg_q
        FROM (
            select tagname,time,
            max(ygxl) over(partition by tagname) max_p,
            min(ygxl) over(partition by tagname) min_p,
            avg(ygxl) over(partition by tagname) avg_p,
            max(wgxl) over(partition by tagname) max_q,
            min(wgxl) over(partition by tagname) min_q,
            avg(wgxl) over(partition by tagname) avg_q,
            RANK() over(partition by tagname order by ygxl desc) maxPNum ,
            RANK() over(partition by tagname order by ygxl ) minPNum ,
            RANK() over(partition by tagname order by wgxl desc) maxQNum ,
            RANK() over(partition by tagname order by wgxl ) minQNum
            from pqm_demand where time between '${startTime}' and '${endTime}'
            and tagname = '${tagname}'
        ) s


    </select>

    <select id="getReal" resultType="java.util.Map">
       select ${label} label,${value} value  from ${table}
        where ${label} in
        <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
            '${id}'
        </foreach>
    </select>

    <select id="getWorkshop" resultType="java.util.Map">
    select
    (SELECT value+',' FROM menu_table_power WHERE
    type='DNZL' and parent_id in
        <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
            '${id}'
        </foreach>
     and parent_id=A.parent_id FOR XML PATH('')) AS value
    ,parent_id from menu_table_power a where type='DNZL' and parent_id in
        <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
            '${id}'
        </foreach>
     group by parent_id;


    </select>
    <select id="menus" resultType="com.byd.emg.pojo.MenuTable">
        select DISTINCT value from menu_table_power where type in ('ZTNH','DNZL') and len(value) >0
    </select>

    <select id="listAvgRecord" resultType="java.util.Map">
    select CONVERT(varchar(100),time, 120) time,tagname,
        <foreach collection="labels" item="label" index="index"  separator=",">
           ${label}
        </foreach>
    from ${table} where tagname in
        <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
            '${id}'
        </foreach>
        and time BETWEEN '${start}' and '${end}'
    </select>
    <select id="getTimes" resultType="java.lang.String">
        select DISTINCT CONVERT(varchar(100),time, 120) from pqm_statistics_quarter
    </select>
    <select id="listByValues" resultType="java.util.Map">
        select value,capacity from pqm_transformer where len([value])>0 and len([capacity])>0
        and value in
        <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
        '${id}'
        </foreach>
        order by order_id


    </select>

</mapper>
